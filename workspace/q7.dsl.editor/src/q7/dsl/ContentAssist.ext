import q7dsl;
import codeassist;

extension q7::dsl::Extensions;
extension q7::dsl::GenContentAssist reexport;

/*
 * There are two types of extensions one can define
 *
 * 1) completeMetaType_feature(ModelElement ele, String prefix)
 * This one is called for assignments only. It gets the underlying Modelelement and the current prefix passed in.
 *
 * 2) completeMetaType(xtext::Element grammarEle, ModelElement ele, String prefix)
 * This one gets the grammarElement which should be completed passed in as the first parameter.
 * an xtext::Element can be of the following types : 
 *  - xtext::RuleName (a call to a lexer rule (e.g. ID)), 
 *  - xtext::Keyword, 
 *  - xtext::Assignment
 *
 * Overwrite rules are as follows:
 * 1) if the first one returns null for a given xtext::Assignment or does not exist the second one is called.
 * 2) if the second one returns null for a given xtext::Keyword or does not exist a default keyword proposal will be added. 
 *
 * Note that only propals with 'Proposal.toInsert.toLowerCase().startsWith(prefix.toLowerCase())' will be proposed in the editor
 */

