<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://www.ibm.com/wbim/bomSchema1.0" elementFormDefault="qualified" version="1.0" xmlns="http://www.ibm.com/wbim/bomSchema1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:include schemaLocation="types.xsd"/>
	<xsd:element name="model">
		<xsd:complexType>
			<xsd:all>
				<xsd:element name="catalogs" minOccurs="0">
					<xsd:complexType>
						<xsd:all>
							<xsd:element name="dataCatalogs" type="Catalogs" minOccurs="0"/>
							<xsd:element name="resourceCatalogs" type="Catalogs" minOccurs="0"/>
							<xsd:element name="organizationCatalogs" type="Catalogs" minOccurs="0"/>
							<xsd:element name="processCatalogs" type="Catalogs" minOccurs="0"/>
						</xsd:all>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="dataModel" type="DataModel" minOccurs="0"/>
				<xsd:element name="resourceModel" type="ResourceModel" minOccurs="0"/>
				<xsd:element name="organizationModel" type="OrganizationModel" minOccurs="0"/>
				<xsd:element name="processModel" type="ProcessModel" minOccurs="0"/>
			</xsd:all>
			<xsd:attribute name="name" type="xsd:string"/>
			<xsd:attribute name="schemaVersion" type="xsd:string" use="required" fixed="1.0"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:simpleType name="ElementName">
		<xsd:annotation>
			<xsd:documentation>The name of the global element may be prefixed by the catalog ID followed by ## to denote the name space for the element name.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value=".*"/>
			<xsd:pattern value=".*##.*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MultipleInstancesMatch">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="TREAT_AS_ERROR"/>
			<xsd:enumeration value="DISCARD_INPUT"/>
			<xsd:enumeration value="DELIVER_TO_ALL_INSTANCES"/>
			<xsd:enumeration value="DELIVER_TO_ANY_INSTANCE"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NoInstancesMatch">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="TREAT_AS_ERROR"/>
			<xsd:enumeration value="DISCARD_INPUT"/>
			<xsd:enumeration value="CREATE_NEW_INSTANCE"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="NonNegativeDouble">
		<xsd:restriction base="xsd:double">
			<xsd:minInclusive value="0"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PercentageValue">
		<xsd:restriction base="xsd:double">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="100"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Annotation">
		<xsd:sequence>
			<xsd:element name="annotationText" type="xsd:string"/>
			<xsd:element name="annotatedNode" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="name" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Attribute">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="rule" type="Expression" minOccurs="0"/>
			<xsd:element name="defaultValue" type="DefaultValue" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="type" default="String">
			<xsd:simpleType>
				<xsd:union memberTypes="BasicDataType PredefinedResourceType PredefinedOrganizationType ElementName"/>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="minimum" type="xsd:nonNegativeInteger" default="1"/>
		<xsd:attribute name="maximum" type="xsd:integer" default="1">
			<xsd:annotation>
				<xsd:documentation>Negative value == unlimited</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="isReadOnly" type="xsd:boolean" default="false"/>
		<xsd:attribute name="isStatic" type="xsd:boolean" default="false"/>
		<xsd:attribute name="isOrdered" type="xsd:boolean" default="false"/>
		<xsd:attribute name="isUnique" type="xsd:boolean" default="false"/>
	</xsd:complexType>
	<xsd:complexType name="AttributeValue">
		<xsd:choice maxOccurs="unbounded">
			<xsd:element name="literalValue" type="xsd:string"/>
			<xsd:element name="expressionValue" type="Expression"/>
			<xsd:element name="publicInstance" type="PublicInstance"/>
			<xsd:element name="privateInstance" type="PrivateInstance"/>
		</xsd:choice>
		<xsd:attribute name="attribute" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="Availability">
		<xsd:attribute name="timetable" type="ElementName" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="BulkResource">
		<xsd:complexContent>
			<xsd:extension base="ComplexDataTypeInstance">
				<xsd:sequence>
					<xsd:group ref="BulkResourceCostType" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="availableQuantity" type="Quantity" minOccurs="0"/>
					<xsd:element name="availability" type="Availability" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="qualification" type="Qualification" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="isConsumable" type="xsd:boolean"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="BulkResourceRequirement">
		<xsd:sequence>
			<xsd:element name="resourceQuantity" type="Quantity"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="bulkResource" type="ElementName"/>
		<xsd:attribute name="timeRequired" type="xsd:duration"/>
	</xsd:complexType>
	<xsd:complexType name="Catalog">
		<xsd:sequence>
			<xsd:element name="catalog" type="Catalog" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required"/>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="Catalogs">
		<xsd:sequence>
			<xsd:element name="catalog" type="Catalog" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ComplexDataType">
		<xsd:sequence>
			<xsd:element name="documentation" type="xsd:string" minOccurs="0"/>
			<xsd:element name="attribute" type="Attribute" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="rule" type="Expression" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="extendedAttributes" type="ExtendedAttributes" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This element is currently not processed. It can contain additional information about the element. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="parentTemplate">
			<xsd:simpleType>
				<xsd:union memberTypes="PredefinedResourceType PredefinedOrganizationType ElementName"/>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ComplexDataTypeInstance">
		<xsd:sequence>
			<xsd:element name="documentation" type="xsd:string" minOccurs="0"/>
			<xsd:element name="attributeValue" type="AttributeValue" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="extendedAttributes" type="ExtendedAttributes" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This element is currently not processed. It can contain additional information about the element. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="instanceOf" use="required">
			<xsd:simpleType>
				<xsd:union memberTypes="PredefinedResourceType PredefinedOrganizationType ElementName"/>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="name" type="ElementName" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="Connection">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="source">
				<xsd:complexType>
					<xsd:attribute name="node" type="ElementName">
						<xsd:annotation>
							<xsd:documentation>Unless the source is an input of the containing process, specify the name of the source activity. If the source is an input of the containing process, do not use this attribute.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="contactPoint" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>Unless the source is a start node or repository node, specify the output name of the source activity or the input name of the containing process. If the source is a start node or repository node, do not use this attribute.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="target">
				<xsd:complexType>
					<xsd:attribute name="node" type="ElementName">
						<xsd:annotation>
							<xsd:documentation>Unless the target is an output of the containing process, specify the name of the target activity. If the target is an output of the containing process, do not use this attribute.</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="contactPoint" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>Unless the target is an end node, stop node  or repository node, specify the input name of the target activity or the output name of the containing process. If the target is an end node, stop node or repository node, do not use this attribute</xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="ControlActionOutputRef">
		<xsd:sequence>
			<xsd:element name="repositoryValue" type="OutputRepositoryValue" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="CostPerQuantity">
		<xsd:complexContent>
			<xsd:extension base="OneTimeCost">
				<xsd:attribute name="unit" type="Unit"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CostPerQuantityAndTimeUnit">
		<xsd:complexContent>
			<xsd:extension base="CostPerQuantity">
				<xsd:attribute name="timeUnit" type="xsd:duration"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CostPerTimeUnit">
		<xsd:complexContent>
			<xsd:extension base="OneTimeCost">
				<xsd:attribute name="timeUnit" type="xsd:duration"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CostPerTimeUnitValue">
		<xsd:complexContent>
			<xsd:extension base="CostValue">
				<xsd:attribute name="timeUnit" type="TimeUnit" default="Minute"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CostValue">
		<xsd:choice>
			<xsd:element name="literalValue" type="NonNegativeDouble"/>
			<xsd:element name="distribution" type="DistributionType"/>
		</xsd:choice>
		<xsd:attribute name="currency" type="Currency"/>
	</xsd:complexType>
	<xsd:complexType name="CriteriaTemplate">
		<xsd:annotation>
			<xsd:documentation>This is the resource search criteria for assigning task resources when the resource type is the "Staff" or "Person" predefined resource.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="managerOfEmployee">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="name" type="xsd:string"/>
						<xsd:element name="domain" type="xsd:string" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="managerOfEmployeeByID">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="staff" type="ElementName"/>
						<xsd:element name="domain" type="xsd:string" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="personSearch">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="userId" type="xsd:string" minOccurs="0"/>
						<xsd:element name="profile" type="xsd:string" minOccurs="0"/>
						<xsd:element name="lastName" type="xsd:string" minOccurs="0"/>
						<xsd:element name="firstName" type="xsd:string" minOccurs="0"/>
						<xsd:element name="middleName" type="xsd:string" minOccurs="0"/>
						<xsd:element name="e-Mail" type="xsd:string" minOccurs="0"/>
						<xsd:element name="company" type="ElementName" minOccurs="0"/>
						<xsd:element name="displayName" type="xsd:string" minOccurs="0"/>
						<xsd:element name="secretary" type="ElementName" minOccurs="0"/>
						<xsd:element name="assistant" type="ElementName" minOccurs="0"/>
						<xsd:element name="manager" type="ElementName" minOccurs="0"/>
						<xsd:element name="department" type="ElementName" minOccurs="0"/>
						<xsd:element name="employeeId" type="xsd:string" minOccurs="0"/>
						<xsd:element name="taxPayerId" type="xsd:string" minOccurs="0"/>
						<xsd:element name="phone" type="xsd:string" minOccurs="0"/>
						<xsd:element name="fax" type="xsd:string" minOccurs="0"/>
						<xsd:element name="gender" type="xsd:string" minOccurs="0"/>
						<xsd:element name="timeZone" type="xsd:string" minOccurs="0"/>
						<xsd:element name="preferred_language" type="xsd:string" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="personName">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="name" type="xsd:string"/>
						<xsd:element name="alternativeName1" type="xsd:string" minOccurs="0"/>
						<xsd:element name="alternativeName2" type="xsd:string" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="groupMembers">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="group" type="ElementName"/>
						<xsd:element name="domain" type="xsd:string" minOccurs="0"/>
						<xsd:element name="includeSubgroups" type="xsd:boolean" default="false" minOccurs="0"/>
						<xsd:element name="alternativeName1" type="xsd:string" minOccurs="0"/>
						<xsd:element name="alternativeName2" type="xsd:string" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="groupSearch">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="groupId" type="xsd:string" minOccurs="0"/>
						<xsd:element name="profile" type="xsd:string" minOccurs="0"/>
						<xsd:element name="industryType" type="xsd:string" minOccurs="0"/>
						<xsd:element name="businessType" type="xsd:string" minOccurs="0"/>
						<xsd:element name="geographicLocation" type="xsd:string" minOccurs="0"/>
						<xsd:element name="affiliates" type="xsd:string" minOccurs="0"/>
						<xsd:element name="displayName" type="xsd:string" minOccurs="0"/>
						<xsd:element name="secretary" type="ElementName" minOccurs="0"/>
						<xsd:element name="assistant" type="ElementName" minOccurs="0"/>
						<xsd:element name="manager" type="ElementName" minOccurs="0"/>
						<xsd:element name="businessCategory" type="ElementName" minOccurs="0"/>
						<xsd:element name="parentCompany" type="ElementName" minOccurs="0"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="organizationManager">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="organization" type="ElementName"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="DataModel">
		<xsd:all>
			<xsd:element name="businessItemTemplates" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="businessItemTemplate" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="businessItems" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="businessItem" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="businessItemInstances" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="businessItemInstance" type="ComplexDataTypeInstance" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="notificationTemplates" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="notificationTemplate" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="notifications" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="notification" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Decision">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="inputBranch" type="InputBranch"/>
			<xsd:element name="outputBranch" minOccurs="2" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The outputBranch lists the outputs that correspond to inputs in the same order as the inputs appear in the inputBranch.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="OutputBranch">
							<xsd:sequence>
								<xsd:element name="condition" type="Expression" minOccurs="0"/>
								<xsd:element name="operationalData" type="OutputPathOperationalData" minOccurs="0"/>
							</xsd:sequence>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="isSimpleDecision" type="xsd:boolean" use="optional" default="false"/>
		<xsd:attribute name="isInclusive" type="xsd:boolean" use="optional" default="false"/>
	</xsd:complexType>
	<xsd:complexType name="DefaultValue">
		<xsd:choice>
			<xsd:element name="literalValue" type="xsd:string"/>
			<xsd:element name="expressionValue" type="Expression"/>
			<!-- tool doesn't support instanceValue for default value right now-->
			<!--xsd:element name="publicInstance" type="PublicInstance"/-->
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="DistributionType">
		<xsd:choice>
			<xsd:element name="exponential">
				<xsd:complexType>
					<xsd:attribute name="mean" type="NonNegativeDouble"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="gamma">
				<xsd:complexType>
					<xsd:attribute name="mean" type="NonNegativeDouble"/>
					<xsd:attribute name="standardDeviation" type="NonNegativeDouble"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="lognormal">
				<xsd:complexType>
					<xsd:attribute name="mean" type="NonNegativeDouble"/>
					<xsd:attribute name="standardDeviation" type="NonNegativeDouble"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="normal">
				<xsd:complexType>
					<xsd:attribute name="mean" type="NonNegativeDouble"/>
					<xsd:attribute name="standardDeviation" type="NonNegativeDouble"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="poisson">
				<xsd:complexType>
					<xsd:attribute name="mean" type="NonNegativeDouble"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="randomList">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="value" type="NonNegativeDouble" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="uniform">
				<xsd:complexType>
					<xsd:attribute name="minimum" type="NonNegativeDouble"/>
					<xsd:attribute name="maximum" type="NonNegativeDouble"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="weightedList">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="value" minOccurs="0" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:simpleContent>
									<xsd:extension base="NonNegativeDouble">
										<xsd:attribute name="probability" type="PercentageValue"/>
									</xsd:extension>
								</xsd:simpleContent>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="Expression">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="ExtendedAttributes">
		<xsd:sequence>
			<xsd:element name="extendedAttribute" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType mixed="true">
					<xsd:choice minOccurs="0" maxOccurs="unbounded">
						<xsd:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:choice>
					<xsd:attribute name="name" type="xsd:NMTOKEN" use="required"/>
					<xsd:attribute name="value" type="xsd:string"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Fork">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="inputBranch" type="InputBranch"/>
			<xsd:element name="outputBranch" type="OutputBranch" minOccurs="2" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The outputBranch lists the outputs that correspond to inputs in the same order as the inputs appear in the inputBranch.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="ForLoop">
		<xsd:annotation>
			<xsd:documentation>The For Loop must use the start node to connect the first element in the loop. The loop must not use the input to the loop to connect to this element. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Process">
				<xsd:sequence>
					<xsd:element name="loopCondition" minOccurs="0">
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="Expression">
									<xsd:attribute name="initialCounter" type="xsd:positiveInteger" default="1"/>
									<xsd:attribute name="finalCounter" type="xsd:positiveInteger" default="1"/>
									<xsd:attribute name="counterIncrement" type="xsd:positiveInteger" default="1"/>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="GlobalRepositoryRef">
		<xsd:attribute name="name" type="ElementName" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="IndividualResource">
		<xsd:complexContent>
			<xsd:extension base="ComplexDataTypeInstance">
				<xsd:sequence>
					<xsd:group ref="IndividualResourceCostType" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="availability" type="Availability" minOccurs="0" maxOccurs="unbounded"/>
					<xsd:element name="qualification" type="Qualification" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="IndividualResourceRequirement">
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="individualResource" type="ElementName"/>
		<xsd:attribute name="timeRequired" type="xsd:duration"/>
	</xsd:complexType>
	<xsd:complexType name="Input">
		<xsd:sequence>
			<xsd:choice minOccurs="0">
				<xsd:element name="constantValue" type="InputConstantValue">
					<xsd:annotation>
						<xsd:documentation>Global processes, tasks, and services ignore constantValue as an input.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="repositoryValue" type="InputRepositoryValue">
					<xsd:annotation>
						<xsd:documentation>This definition only applies to inputs that retrieve values from a repository.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:choice>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="associatedData">
			<xsd:simpleType>
				<xsd:union memberTypes="BasicDataType ElementName"/>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="minimum" type="xsd:nonNegativeInteger" default="1"/>
		<xsd:attribute name="maximum" type="xsd:integer" default="1">
			<xsd:annotation>
				<xsd:documentation>Negative value == unlimited</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="isOrdered" type="xsd:boolean" default="false"/>
		<xsd:attribute name="isUnique" type="xsd:boolean" default="false"/>
	</xsd:complexType>
	<xsd:complexType name="InputBranch">
		<xsd:sequence>
			<xsd:element name="input" type="Input" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="InputConstantValue">
		<xsd:choice>
			<xsd:element name="literalValue" type="xsd:string" maxOccurs="unbounded"/>
			<xsd:element name="publicInstance" type="PublicInstance" maxOccurs="unbounded"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="InputCriterion">
		<xsd:sequence>
			<xsd:element name="input" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="name" type="xsd:string" use="required"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="constraint" type="Expression" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="correlation" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="predicate" type="Expression" minOccurs="0"/>
					</xsd:sequence>
					<xsd:attribute name="noInstancesSatisfyCondition" type="NoInstancesMatch" default="TREAT_AS_ERROR"/>
					<xsd:attribute name="multipleInstancesSatisfyCondition" type="MultipleInstancesMatch" default="TREAT_AS_ERROR"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="InputCriterionRef">
		<xsd:attribute name="name" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="InputRepositoryValue">
		<xsd:choice>
			<xsd:element name="localRepository" type="LocalRepositoryRef"/>
			<xsd:element name="globalRepository" type="GlobalRepositoryRef"/>
		</xsd:choice>
		<xsd:attribute name="isRemove" type="xsd:boolean" default="false"/>
		<xsd:attribute name="atBeginning" type="xsd:boolean" default="true"/>
	</xsd:complexType>
	<xsd:complexType name="Inputs">
		<xsd:sequence>
			<xsd:element name="input" type="Input" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="inputCriterion" type="InputCriterion" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Invocation">
		<xsd:sequence>
			<xsd:choice minOccurs="0">
				<xsd:element name="inputConstantValue" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="InputConstantValue">
								<xsd:attribute name="input" type="xsd:string" use="required"/>
							</xsd:extension>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
				<xsd:element name="inputRepositoryValue" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="InputRepositoryValue">
								<xsd:attribute name="input" type="xsd:string" use="required"/>
							</xsd:extension>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
			</xsd:choice>
			<xsd:element name="outputRepositoryValue" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="OutputRepositoryValue">
							<xsd:attribute name="output" type="xsd:string" use="required"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="additionalInput" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="inputCriterion" type="InputCriterionRef" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
					<xsd:attribute name="name" type="xsd:string" use="required"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="additionalOutput" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="outputCriterion" type="OutputCriterionRef" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
					<xsd:attribute name="name" type="xsd:string" use="required"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="callSynchronously" type="xsd:boolean" default="true"/>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="Join">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="inputBranch" type="InputBranch" minOccurs="2" maxOccurs="unbounded"/>
			<xsd:element name="outputBranch" type="OutputBranch">
				<xsd:annotation>
					<xsd:documentation>The outputBranch lists the outputs that correspond to inputs in the same order as the inputs appear in the inputBranch.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="LocalRepository">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="type" default="String">
			<xsd:simpleType>
				<xsd:union memberTypes="BasicDataType ElementName"/>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="capacity" type="xsd:integer" default="-1"/>
		<xsd:attribute name="isOrdered" type="xsd:boolean" default="false"/>
		<xsd:attribute name="isUnique" type="xsd:boolean" default="false"/>
	</xsd:complexType>
	<xsd:complexType name="LocalRepositoryRef">
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="Loop">
		<xsd:annotation>
			<xsd:documentation>The Do While Loops and While Loops must use the start node to connect the first element in the loop. The loop must not use the input to the loop to connect to this element. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Process">
				<xsd:sequence>
					<xsd:element name="loopCondition" type="Expression" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="isConditionTestedFirst" type="xsd:boolean" default="false"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Map">
		<xsd:complexContent>
			<xsd:extension base="Task"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Merge">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="inputBranch" type="InputBranch" minOccurs="2" maxOccurs="unbounded"/>
			<xsd:element name="outputBranch" type="OutputBranch">
				<xsd:annotation>
					<xsd:documentation>The outputBranch lists the outputs that correspond to inputs in the same order as the inputs appear in the inputBranch.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="MonetaryValue">
		<xsd:simpleContent>
			<xsd:extension base="NonNegativeDouble">
				<xsd:attribute name="currency" type="Currency"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="NotificationBroadcaster">
		<xsd:complexContent>
			<xsd:extension base="Task">
				<xsd:attribute name="notification" type="ElementName"/>
				<xsd:attribute name="scope" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>The scope name has one of the following formats:  [catalog ID]##[global process name] or  [catalog ID]##[global process name]/[subprocess name]/...  
For example, the notification broadcaster called Low Stock is in a subprocess called Check Inventory within a subprocess called Process Order within a process called Order Product. If the notification scope is to be Process Order, the scope name is [catlogId]##Order Product/Process Order. Note: this is a similar format to what the user sees in the scope entry of the notification broadcaster in its Attribute view except that the catalog ID prefixes the global process name.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="NotificationReceiver">
		<xsd:complexContent>
			<xsd:extension base="Task">
				<xsd:sequence>
					<xsd:element name="notificationFilter" type="Expression" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="notification" type="ElementName"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Observer">
		<xsd:complexContent>
			<xsd:extension base="Task">
				<xsd:sequence>
					<xsd:element name="observationExpression" type="Expression"/>
				</xsd:sequence>
				<xsd:attribute name="isObserveContinuously" type="xsd:boolean" default="false"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="OneTimeCost">
		<xsd:sequence>
			<xsd:element name="costValue" type="MonetaryValue"/>
			<xsd:element name="whenCostApplicable" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="timetable" type="ElementName" use="required"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="OperationalData">
		<xsd:sequence>
			<xsd:element name="timeEstimation" minOccurs="0">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="processingTime" type="TimeValue" minOccurs="0"/>
						<xsd:element name="maxResourceWaitingTime" type="TimeValue" minOccurs="0"/>
					</xsd:all>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="cost" minOccurs="0">
				<xsd:complexType>
					<xsd:all>
						<xsd:element name="executionCost" type="CostValue" minOccurs="0"/>
						<xsd:element name="startupCost" type="CostValue" minOccurs="0"/>
						<xsd:element name="resourceWaitingCost" type="CostPerTimeUnitValue" minOccurs="0"/>
					</xsd:all>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="revenue" type="CostValue" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="OrganizationModel">
		<xsd:all>
			<xsd:element name="organizationDefinitionTemplates" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="organizationDefinitionTemplate" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="organizationDefinitions" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="organizationDefinition" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="organizationUnits" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="organizationUnit" type="ComplexDataTypeInstance" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="locationDefinitionTemplates" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="locationDefinitionTemplate" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="locationDefinitions" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="locationDefinition" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="locations" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="location" type="ComplexDataTypeInstance" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Organizations">
		<xsd:sequence>
			<xsd:element name="organizationUnit" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="name" type="ElementName"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="location" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="name" type="ElementName"/>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Output">
		<xsd:sequence>
			<xsd:element name="repositoryValue" type="OutputRepositoryValue" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This definition only applies to outputs that send values to a repository.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string"/>
		<xsd:attribute name="associatedData" type="ElementName"/>
		<xsd:attribute name="minimum" type="xsd:integer" default="1"/>
		<xsd:attribute name="maximum" type="xsd:integer" default="1">
			<xsd:annotation>
				<xsd:documentation>Negative value == unlimited</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="isOrdered" type="xsd:boolean" default="false"/>
		<xsd:attribute name="isUnique" type="xsd:boolean" default="1"/>
	</xsd:complexType>
	<xsd:complexType name="OutputBranch">
		<xsd:sequence>
			<xsd:element name="output" type="ControlActionOutputRef" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="OutputCriterion">
		<xsd:sequence>
			<xsd:element name="output" type="OutputRef" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="relatedInputCriteria" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="inputCriterion" type="InputCriterionRef" minOccurs="0" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<!--xsd:element name="operationalData" type="OutputPathOperationalData" minOccurs="0"/-->
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string"/>
		<xsd:attribute name="type" default="REGULAR">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="REGULAR"/>
					<xsd:enumeration value="EXCEPTIONAL"/>
					<xsd:enumeration value="STREAMING"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="OutputCriterionRef">
		<xsd:attribute name="name" type="xsd:string"/>
	</xsd:complexType>
	<xsd:complexType name="OutputPathOperationalData">
		<xsd:sequence>
			<xsd:element name="probability" type="OutputPathProbabilityValue"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="OutputPathProbabilityValue">
		<xsd:choice>
			<xsd:element name="literalValue" type="PercentageValue"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="OutputRef">
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="OutputRepositoryValue">
		<xsd:choice>
			<xsd:element name="localRepository" type="LocalRepositoryRef"/>
			<xsd:element name="globalRepository" type="GlobalRepositoryRef"/>
		</xsd:choice>
		<xsd:attribute name="isInsert" type="xsd:boolean" default="false"/>
		<xsd:attribute name="atBeginning" type="xsd:boolean" default="true"/>
	</xsd:complexType>
	<xsd:complexType name="Outputs">
		<xsd:sequence>
			<xsd:element name="output" type="Output" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="outputCriterion" type="OutputCriterion" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="PrivateInstance">
		<xsd:sequence>
			<xsd:element name="attributeValue" type="AttributeValue" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="Process">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="inputs" type="Inputs" minOccurs="0"/>
			<xsd:element name="outputs" type="Outputs" minOccurs="0"/>
			<xsd:element name="precondition" type="Expression" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="postcondition" type="Expression" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="organizations" type="Organizations" minOccurs="0"/>
			<xsd:element name="operationalData" type="OperationalData" minOccurs="0"/>
			<xsd:element name="flowContent" minOccurs="0">
				<xsd:complexType>
					<xsd:choice maxOccurs="unbounded">
						<xsd:element name="startNode" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="entryPoint" minOccurs="0" maxOccurs="unbounded">
										<xsd:complexType>
											<xsd:attribute name="inputCriterion" type="xsd:string" use="required"/>
										</xsd:complexType>
									</xsd:element>
								</xsd:sequence>
								<xsd:attribute name="name" type="xsd:string" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="stopNode" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence/>
								<xsd:attribute name="name" type="xsd:string" use="required"/>
								<xsd:attribute name="associatedOutputCriterion" type="xsd:string"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="endNode" minOccurs="0">
							<xsd:complexType>
								<xsd:sequence/>
								<xsd:attribute name="name" type="xsd:string" use="required"/>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="task" type="Task" minOccurs="0"/>
						<xsd:element name="decision" type="Decision" minOccurs="0"/>
						<xsd:element name="merge" type="Merge" minOccurs="0"/>
						<xsd:element name="fork" type="Fork" minOccurs="0"/>
						<xsd:element name="join" type="Join" minOccurs="0"/>
						<xsd:element name="notificationBroadcaster" type="NotificationBroadcaster" minOccurs="0"/>
						<xsd:element name="notificationReceiver" type="NotificationReceiver" minOccurs="0"/>
						<xsd:element name="observer" type="Observer" minOccurs="0"/>
						<xsd:element name="timer" type="Timer" minOccurs="0"/>
						<xsd:element name="map" type="Map" minOccurs="0"/>
						<xsd:element name="loop" type="Loop" minOccurs="0"/>
						<xsd:element name="forLoop" type="ForLoop" minOccurs="0"/>
						<xsd:element name="process" type="Process" minOccurs="0"/>
						<xsd:element name="localRepository" type="LocalRepository" minOccurs="0"/>
						<xsd:element name="callToProcess" minOccurs="0">
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="Invocation">
										<xsd:attribute name="process" type="ElementName"/>
									</xsd:extension>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="callToTask" minOccurs="0">
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="Invocation">
										<xsd:attribute name="task" type="ElementName"/>
									</xsd:extension>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="callToService" minOccurs="0">
							<xsd:complexType>
								<xsd:complexContent>
									<xsd:extension base="Invocation">
										<xsd:attribute name="service" type="ElementName"/>
									</xsd:extension>
								</xsd:complexContent>
							</xsd:complexType>
						</xsd:element>
						<xsd:element name="connection" type="Connection" minOccurs="0"/>
						<xsd:element name="annotation" type="Annotation" minOccurs="0"/>
					</xsd:choice>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="extendedAttributes" type="ExtendedAttributes" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This element is currently not processed. It can contain additional information about the element. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="ElementName" use="required">
			<xsd:annotation>
				<xsd:documentation>For a local process, the name type is xsd:string.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="ProcessModel">
		<xsd:all>
			<xsd:element name="processes" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="process" type="Process" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>For a global process, its inputs and outputs must have associated data. In inputs for global processes, the constantValue element is ignored. In inputs and outputs for global processes, the repositoryValue element is ignored.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="tasks" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="task" type="Task" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>For a global task, its inputs and outputs must have associated data. In inputs for global tasks, the constantValue element is ignored. In inputs and outputs for global tasks, the repositoryValue element is ignored.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="repositories" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="repository" type="Repository" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="services" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="service" type="Service" maxOccurs="unbounded">
							<xsd:annotation>
								<xsd:documentation>For a global service, its inputs and outputs must have associated data. In inputs for global services, the constantValue element is ignored. In inputs and outputs for global services, the repositoryValue element is ignored.</xsd:documentation>
							</xsd:annotation>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="PublicInstance">
		<xsd:attribute name="instance" type="ElementName" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="Qualification">
		<xsd:sequence>
			<xsd:element name="scopeDimensionValue" type="ScopeDimensionValue" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute name="role" type="ElementName" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="Quantity">
		<xsd:simpleContent>
			<xsd:extension base="NonNegativeDouble">
				<xsd:attribute name="unit" type="Unit"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="Repository">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="defaultValues" type="RepositoryDataValue" minOccurs="0"/>
			<xsd:element name="computedValues" type="RepositoryDataValue" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="ElementName" use="required"/>
		<xsd:attribute name="type" type="ElementName" default="String"/>
		<xsd:attribute name="capacity" type="xsd:integer" default="-1"/>
		<xsd:attribute name="isOrdered" type="xsd:boolean" default="false"/>
		<xsd:attribute name="isUnique" type="xsd:boolean" default="false"/>
		<xsd:attribute name="isReadOnly" type="xsd:boolean" default="true"/>
	</xsd:complexType>
	<xsd:complexType name="RepositoryDataValue">
		<xsd:choice maxOccurs="unbounded">
			<xsd:element name="literalValue" type="xsd:string"/>
			<xsd:element name="expressionValue" type="Expression"/>
			<xsd:element name="publicInstance" type="PublicInstance"/>
			<xsd:element name="privateInstance" type="PrivateInstance"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="Resources">
		<xsd:sequence>
			<xsd:element name="roleRequirement" type="RoleRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="individualResourceRequirement" type="TaskIndividualResourceRequirement" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="bulkResourceRequirement" type="BulkResourceRequirement" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ResourceModel">
		<xsd:all>
			<xsd:element name="individualResourceDefinitionTemplates" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="individualResourceDefinitionTemplate" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="individualResourceDefinitions" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="individualResourceDefinition" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="bulkResourceDefinitionTemplates" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="bulkResourceDefinitionTemplate" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="bulkResourceDefinitions" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="bulkResourceDefinition" type="TypeDeclaration" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="individualResources" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="individualResource" type="IndividualResource" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="bulkResources" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="bulkResource" type="BulkResource" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="roles" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="role" type="Role" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="timetables" minOccurs="0">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="timetable" type="Timetable" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:all>
	</xsd:complexType>
	<xsd:complexType name="Role">
		<xsd:sequence>
			<xsd:element name="documentation" type="xsd:string" minOccurs="0"/>
			<xsd:element name="scopeDimension" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="name" type="xsd:string"/>
					<xsd:attribute name="valueType" type="BasicDataType"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:group ref="IndividualResourceCostType" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="availability" type="Availability" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="extendedAttributes" type="ExtendedAttributes" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This element is currently not processed. It can contain additional information about the element. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="ElementName" use="required"/>
	</xsd:complexType>
	<xsd:complexType name="RoleRequirement">
		<xsd:sequence>
			<xsd:element name="resourceQuantity" type="Quantity"/>
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		<xsd:attribute name="role" type="ElementName"/>
		<xsd:attribute name="timeRequired" type="xsd:duration"/>
		<xsd:attribute name="type" type="ElementName"/>
	</xsd:complexType>
	<xsd:complexType name="Service">
		<xsd:complexContent>
			<xsd:extension base="Task"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ScopeDimensionValue">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="name" type="xsd:string"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<xsd:complexType name="Task">
		<xsd:sequence>
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<xsd:element name="inputs" type="Inputs" minOccurs="0"/>
			<xsd:element name="outputs" type="Outputs" minOccurs="0"/>
			<xsd:element name="precondition" type="Expression" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="postcondition" type="Expression" minOccurs="0" maxOccurs="unbounded"/>
			<xsd:element name="resources" type="Resources" minOccurs="0"/>
			<xsd:element name="organizations" type="Organizations" minOccurs="0"/>
			<xsd:element name="operationalData" type="OperationalData" minOccurs="0"/>
			<xsd:element name="extendedAttributes" type="ExtendedAttributes" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This element is currently not processed. It can contain additional information about the element. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="ElementName" use="required">
			<xsd:annotation>
				<xsd:documentation>For a local task, the name type is xsd:string.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="TaskIndividualResourceRequirement">
		<xsd:complexContent>
			<xsd:extension base="IndividualResourceRequirement">
				<xsd:sequence>
					<xsd:element name="criteria" type="CriteriaTemplate" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Criteria only applies when the resource is the predefined "Person" or "Staff" type.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Timer">
		<xsd:complexContent>
			<xsd:extension base="Task">
				<xsd:sequence>
					<xsd:element name="timerSetting">
						<xsd:complexType>
							<xsd:choice>
								<xsd:element name="basedOnTimetable">
									<xsd:complexType>
										<xsd:attribute name="timetable" type="ElementName"/>
									</xsd:complexType>
								</xsd:element>
								<xsd:element name="constantTime">
									<xsd:complexType>
										<xsd:attribute name="time" type="xsd:dateTime"/>
									</xsd:complexType>
								</xsd:element>
								<xsd:element name="lastActivationTimePlus">
									<xsd:complexType>
										<xsd:attribute name="duration" type="xsd:duration"/>
									</xsd:complexType>
								</xsd:element>
								<xsd:element name="timerExpression" type="Expression"/>
							</xsd:choice>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Timetable">
		<xsd:sequence>
			<xsd:element name="documentation" type="xsd:string" minOccurs="0"/>
			<xsd:element name="recurringTimeInterval" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:choice>
						<xsd:element name="startTime" type="xsd:dateTime"/>
						<xsd:element name="startDayOfWeek">
							<xsd:complexType>
								<xsd:attribute name="dayOfWeek" type="DayOfWeek"/>
								<xsd:attribute name="weekNumber" type="xsd:positiveInteger"/>
								<xsd:attribute name="startTime" type="xsd:time"/>
							</xsd:complexType>
						</xsd:element>
					</xsd:choice>
					<xsd:attribute name="name" type="xsd:string" use="required"/>
					<xsd:attribute name="duration" type="xsd:duration"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="exemptionPeriod" minOccurs="0" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:attribute name="timetable" type="ElementName" use="required"/>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="extendedAttributes" type="ExtendedAttributes" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>This element is currently not processed. It can contain additional information about the element. </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="name" type="ElementName" use="required"/>
		<xsd:attribute name="numberOfTimesToRepeat" type="xsd:integer"/>
		<xsd:attribute name="repetitionPeriod" type="xsd:duration"/>
		<xsd:attribute name="beginingOn" type="xsd:dateTime"/>
	</xsd:complexType>
	<xsd:complexType name="TimeValue">
		<xsd:choice>
			<xsd:element name="literalValue" type="xsd:duration"/>
			<xsd:element name="distribution">
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="DistributionType">
							<xsd:attribute name="timeUnit" type="TimeUnit" fixed="Minute"/>
						</xsd:extension>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="TypeDeclaration">
		<xsd:choice minOccurs="0">
			<xsd:element name="complexDataType" type="ComplexDataType"/>
		</xsd:choice>
		<xsd:attribute name="name" type="ElementName" use="required"/>
	</xsd:complexType>
	<xsd:group name="BulkResourceCostType">
		<xsd:choice>
			<xsd:element name="oneTimeCost" type="OneTimeCost"/>
			<xsd:element name="costPerQuantity" type="CostPerQuantity"/>
			<xsd:element name="costPerQuantityAndTimeUnit" type="CostPerQuantityAndTimeUnit"/>
		</xsd:choice>
	</xsd:group>
	<xsd:group name="IndividualResourceCostType">
		<xsd:choice>
			<xsd:element name="oneTimeCost" type="OneTimeCost"/>
			<xsd:element name="costPerTimeUnit" type="CostPerTimeUnit"/>
		</xsd:choice>
	</xsd:group>
</xsd:schema>
