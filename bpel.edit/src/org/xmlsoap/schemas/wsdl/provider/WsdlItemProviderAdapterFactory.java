/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.xmlsoap.schemas.wsdl.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.xmlsoap.schemas.wsdl.util.WsdlAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class WsdlItemProviderAdapterFactory extends WsdlAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WsdlItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);		
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TBinding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TBindingItemProvider tBindingItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TBinding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTBindingAdapter() {
		if (tBindingItemProvider == null) {
			tBindingItemProvider = new TBindingItemProvider(this);
		}

		return tBindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TBindingOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TBindingOperationItemProvider tBindingOperationItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TBindingOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTBindingOperationAdapter() {
		if (tBindingOperationItemProvider == null) {
			tBindingOperationItemProvider = new TBindingOperationItemProvider(this);
		}

		return tBindingOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TBindingOperationFault} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TBindingOperationFaultItemProvider tBindingOperationFaultItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TBindingOperationFault}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTBindingOperationFaultAdapter() {
		if (tBindingOperationFaultItemProvider == null) {
			tBindingOperationFaultItemProvider = new TBindingOperationFaultItemProvider(this);
		}

		return tBindingOperationFaultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TBindingOperationMessage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TBindingOperationMessageItemProvider tBindingOperationMessageItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TBindingOperationMessage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTBindingOperationMessageAdapter() {
		if (tBindingOperationMessageItemProvider == null) {
			tBindingOperationMessageItemProvider = new TBindingOperationMessageItemProvider(this);
		}

		return tBindingOperationMessageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TDefinitions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDefinitionsItemProvider tDefinitionsItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TDefinitions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTDefinitionsAdapter() {
		if (tDefinitionsItemProvider == null) {
			tDefinitionsItemProvider = new TDefinitionsItemProvider(this);
		}

		return tDefinitionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TDocumentation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDocumentationItemProvider tDocumentationItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TDocumentation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTDocumentationAdapter() {
		if (tDocumentationItemProvider == null) {
			tDocumentationItemProvider = new TDocumentationItemProvider(this);
		}

		return tDocumentationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TDocumented} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TDocumentedItemProvider tDocumentedItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TDocumented}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTDocumentedAdapter() {
		if (tDocumentedItemProvider == null) {
			tDocumentedItemProvider = new TDocumentedItemProvider(this);
		}

		return tDocumentedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TFault} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TFaultItemProvider tFaultItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TFault}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTFaultAdapter() {
		if (tFaultItemProvider == null) {
			tFaultItemProvider = new TFaultItemProvider(this);
		}

		return tFaultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TImport} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TImportItemProvider tImportItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TImport}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTImportAdapter() {
		if (tImportItemProvider == null) {
			tImportItemProvider = new TImportItemProvider(this);
		}

		return tImportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TMessage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TMessageItemProvider tMessageItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TMessage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTMessageAdapter() {
		if (tMessageItemProvider == null) {
			tMessageItemProvider = new TMessageItemProvider(this);
		}

		return tMessageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TOperationItemProvider tOperationItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTOperationAdapter() {
		if (tOperationItemProvider == null) {
			tOperationItemProvider = new TOperationItemProvider(this);
		}

		return tOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TParam} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TParamItemProvider tParamItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TParam}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTParamAdapter() {
		if (tParamItemProvider == null) {
			tParamItemProvider = new TParamItemProvider(this);
		}

		return tParamItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TPart} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPartItemProvider tPartItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TPart}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTPartAdapter() {
		if (tPartItemProvider == null) {
			tPartItemProvider = new TPartItemProvider(this);
		}

		return tPartItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPortItemProvider tPortItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTPortAdapter() {
		if (tPortItemProvider == null) {
			tPortItemProvider = new TPortItemProvider(this);
		}

		return tPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TPortType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TPortTypeItemProvider tPortTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TPortType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTPortTypeAdapter() {
		if (tPortTypeItemProvider == null) {
			tPortTypeItemProvider = new TPortTypeItemProvider(this);
		}

		return tPortTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TServiceItemProvider tServiceItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTServiceAdapter() {
		if (tServiceItemProvider == null) {
			tServiceItemProvider = new TServiceItemProvider(this);
		}

		return tServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.xmlsoap.schemas.wsdl.TTypes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TTypesItemProvider tTypesItemProvider;

	/**
	 * This creates an adapter for a {@link org.xmlsoap.schemas.wsdl.TTypes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTTypesAdapter() {
		if (tTypesItemProvider == null) {
			tTypesItemProvider = new TTypesItemProvider(this);
		}

		return tTypesItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (tBindingItemProvider != null) tBindingItemProvider.dispose();
		if (tBindingOperationItemProvider != null) tBindingOperationItemProvider.dispose();
		if (tBindingOperationFaultItemProvider != null) tBindingOperationFaultItemProvider.dispose();
		if (tBindingOperationMessageItemProvider != null) tBindingOperationMessageItemProvider.dispose();
		if (tDefinitionsItemProvider != null) tDefinitionsItemProvider.dispose();
		if (tDocumentationItemProvider != null) tDocumentationItemProvider.dispose();
		if (tDocumentedItemProvider != null) tDocumentedItemProvider.dispose();
		if (tFaultItemProvider != null) tFaultItemProvider.dispose();
		if (tImportItemProvider != null) tImportItemProvider.dispose();
		if (tMessageItemProvider != null) tMessageItemProvider.dispose();
		if (tOperationItemProvider != null) tOperationItemProvider.dispose();
		if (tParamItemProvider != null) tParamItemProvider.dispose();
		if (tPartItemProvider != null) tPartItemProvider.dispose();
		if (tPortItemProvider != null) tPortItemProvider.dispose();
		if (tPortTypeItemProvider != null) tPortTypeItemProvider.dispose();
		if (tServiceItemProvider != null) tServiceItemProvider.dispose();
		if (tTypesItemProvider != null) tTypesItemProvider.dispose();
	}

}
